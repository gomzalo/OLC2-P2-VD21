[{"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/index.js":"1","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/ThemeWrapper/ThemeWrapper.js":"2","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"3","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/RTL/RTL.js":"4","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/Admin/Admin.js":"5","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/ThemeContext.js":"6","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/BackgroundColorContext.js":"7","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/routes.js":"8","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Footer/Footer.js":"9","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Sidebar/Sidebar.js":"10","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/AdminNavbar.js":"11","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/RTLNavbar.js":"12","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/FixedPlugin/FixedPlugin.js":"13","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Dashboard.js":"14","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/variables/charts.js":"15","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Inicio.js":"16","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Carga.js":"17","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Param.js":"18","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/DataController.js":"19"},{"size":1814,"mtime":1641269609489,"results":"20","hashOfConfig":"21"},{"size":695,"mtime":1640677778609,"results":"22","hashOfConfig":"21"},{"size":495,"mtime":1640677778606,"results":"23","hashOfConfig":"21"},{"size":5573,"mtime":1640677778621,"results":"24","hashOfConfig":"21"},{"size":4716,"mtime":1640817091295,"results":"25","hashOfConfig":"21"},{"size":201,"mtime":1640677778610,"results":"26","hashOfConfig":"21"},{"size":254,"mtime":1640677778609,"results":"27","hashOfConfig":"21"},{"size":1515,"mtime":1640817415790,"results":"28","hashOfConfig":"21"},{"size":1776,"mtime":1640818371387,"results":"29","hashOfConfig":"21"},{"size":5511,"mtime":1640729670722,"results":"30","hashOfConfig":"21"},{"size":7152,"mtime":1640816845975,"results":"31","hashOfConfig":"21"},{"size":7000,"mtime":1640677778608,"results":"32","hashOfConfig":"21"},{"size":4226,"mtime":1640677778607,"results":"33","hashOfConfig":"21"},{"size":21588,"mtime":1641283033603,"results":"34","hashOfConfig":"21"},{"size":3188,"mtime":1641092183157,"results":"35","hashOfConfig":"21"},{"size":4249,"mtime":1641248502547,"results":"36","hashOfConfig":"21"},{"size":11566,"mtime":1641322432681,"results":"37","hashOfConfig":"21"},{"size":165828,"mtime":1641334509363,"results":"38","hashOfConfig":"21"},{"size":616,"mtime":1641269676487,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1k0x18m",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/index.js",[],["80","81"],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/ThemeWrapper/ThemeWrapper.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/RTL/RTL.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/Admin/Admin.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/ThemeContext.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/BackgroundColorContext.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/routes.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Footer/Footer.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Sidebar/Sidebar.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/AdminNavbar.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/RTLNavbar.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/FixedPlugin/FixedPlugin.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Dashboard.js",["82","83","84","85","86","87","88"],"/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { React, useState } from \"react\";\n// nodejs library that concatenates classes\n// import classNames from \"classnames\";\n// react plugin used to create charts\nimport { Line } from \"react-chartjs-2\";\n// import axios from 'axios';\nimport font from 'assets/fonts/times.ttf'\nimport font_bold from 'assets/fonts/times-bold.ttf'\nimport font_italic from 'assets/fonts/times-italic.ttf'\n// reactstrap components\nimport {\n  // Button,\n  // ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\n// PDF generator\nimport { \n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  ReactPDF,\n  Image,\n  Font,\n} from '@react-pdf/renderer';\n\n// Create styles\n\nfunction Dashboard(props) {\n  const [prediccion, setPrediccion] = useState(0);\n  var reporte_arr = [\n    {index: 1, reporte: \"Tendencia de la infección por COVID-19 en un país.\"},\n    {index: 2, reporte: \"Predicción de infectados en un país.\"},\n    {index: 3, reporte: \"Índice de progresión de la pandemia.\"},\n    {index: 4, reporte: \"Predicción de mortalidad por COVID en un departamento.\"},\n    {index: 5, reporte: \"Predicción de mortalidad por COVID en un país.\"},\n    {index: 6, reporte: \"Análisis del número de muertes por coronavirus en un país.\"},\n    {index: 7, reporte: \"Tendencia del número de infectados por día de un país.\"},\n    {index: 8, reporte: \"Predicción de casos de un país para un año.\"},\n    {index: 9, reporte: \"Tendencia de la vacunación en un país.\"},\n    {index: 10, reporte: \"Ánalisis comparativo de vacunación entre 2 paises.\"},\n    {index: 11, reporte: \"Porcentaje de hombres infectados por COVID-19 en un país desde el primer caso activo.\"},\n    {index: 12, reporte: \"Ánalisis comparativo entre 2 o más paises o continentes.\"},\n    {index: 13, reporte: \"Muertes promedio por casos confirmados y edad de COVID-19 en un país.\"},\n    {index: 14, reporte: \"Muertes según regiones de un país por COVID-19.\"},\n    {index: 15, reporte: \"Tendencia de casos confirmados de coronavirus en un departamento de un país.\"},\n    {index: 16, reporte: \"Porcentaje de muertes frente al total de casos en un país, región o continente.\"},\n    {index: 17, reporte: \"Tasa de comportamiento de casos activos en relación al número de muertes en un continente.\"},\n    {index: 18, reporte: \"Comportamiento y clasificación de personas infectadas por COVID-19 por municipio en un país.\"},\n    {index: 19, reporte: \"Predicción de muertes en el último día del primer año de infecciones en un país.\"},\n    {index: 20, reporte: \"Tasa de crecimiento de casos de COVID-19 en relación con nuevos casos diarios y tasa de muerte por COVID-19.\"},\n    {index: 21, reporte: \"Predicciones de casos y muertes en todo el mundo - Neural Network MLPRegressor.\"},\n    {index: 22, reporte: \"Tasa de mortalidad por coronavirus (COVID-19) en un país.\"},\n    {index: 23, reporte: \"Factores de muerte por COVID-19 en un país.\"},\n    {index: 24, reporte: \"Comparación entre el número de casos detectados y el número de pruebas de un país.\"},\n    {index: 25, reporte: \"Predicción de casos confirmados por día.\"}\n  ];\n  let reporte_map = new Map();\n  \n  const headers = localStorage.getItem(\"headers\");\n  const reporte_activo_key = localStorage.getItem(\"reporte_activo\");\n  const datos_grafica = localStorage.getItem(\"datos_grafica\");\n  const params_grafica = localStorage.getItem(\"params_grafica\");\n  const datos_rep = localStorage.getItem(\"datos_rep\");\n  let params_data_json = JSON.parse(params_grafica);\n  let res_pred = JSON.parse(datos_grafica);\n  let datos_rep_json = JSON.parse(datos_rep);\n  console.log(res_pred);\n  /**\n  *   const params_data = {\n        reporte: reporte,\n        col: col,\n        valor: valor,\n        x: x,\n        isDate: isDate,\n        y: y,\n        pred: pred\n      }\n   */\n  console.log(params_data_json);\n  let param_col;\n  let param_x;\n  let param_y;\n  let param_pred;\n  let param_filtro;\n  param_col = params_data_json.col;\n  param_x = params_data_json.x;\n  param_y = params_data_json.y;\n  param_pred = params_data_json.pred;\n  param_filtro = params_data_json.valor;\n  /*\n  ::::::  datos_grafica   ::::::\n    data:\n      eje_x,\n      eje_y,\n      pred,\n      resultado,\n      rmse,\n      r2,\n  */\n  const eje_x = JSON.parse(res_pred.data.eje_x);\n  const eje_y = JSON.parse(res_pred.data.eje_y);\n  const prediccao = JSON.parse(res_pred.data.pred);\n  const img64 = JSON.parse(res_pred.data.img64);\n  // const resultado = res_pred.data.resultado;\n  const rmse = JSON.parse(res_pred.data.rmse);\n  const r2 = JSON.parse(res_pred.data.r2);\n  const coef = JSON.parse(res_pred.data.coef);\n  /*\n  ::::::  datos_reporte   ::::::\n      dis,\n      conc,\n  */\n  const diseno = datos_rep_json.diseno;\n  const conclusion = datos_rep_json.conclusion;\n  // console.log(img64);\n  // const data_arr = res_pred.data.arr_data;\n  let data_arr = [];\n  for (let i = 0; i < eje_x.length; i++) {\n    data_arr.push({'x': eje_x[i], 'y': eje_y[i]})\n  }\n  // console.log(\"data_arr\");\n  // console.log(data_arr);\n  let reporte_activo = \"\";\n  reporte_arr.forEach(element => {\n    reporte_map.set(element.index, element.reporte);\n    if(reporte_activo_key == element.index){\n      reporte_activo = element.reporte;\n    }\n  });\n  console.log(reporte_activo);\n  // :::::::::::::::::::::::::  PDF  :::::::::::::::::::::::::\n  // Registro de fuentes\n  Font.register({family: 'Times New Roman', format: \"truetype\", src: font })\n  Font.register({family: 'Times New Roman Bold', format: \"truetype\", src: font_bold })\n  Font.register({family: 'Times New Roman Italic', format: \"truetype\", src: font_italic })\n  // Create styles\n  const styles = StyleSheet.create({\n    page: {\n      fontFamily: 'Times New Roman',\n      // flex: 1,\n      // flexDirection: 'row',\n      // flexWrap: 'wrap',\n      padding: 10,\n      backgroundColor: '#FFFF'\n    },\n    title: {\n      display: 'block',\n      fontSize: 30,\n      textAlign: 'center',\n      marginTop: 1,\n      marginBottom: 1,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 10,\n    },\n    subtitle: {\n      display: 'block',\n      fontSize: 13,\n      textAlign: 'center',\n      marginTop: 1,\n      marginBottom: 1,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 10,\n    },\n    h2: {\n      display: 'block',\n      fontSize: 20,\n      textAlign: 'center',\n      marginTop: 1,\n      marginBottom: 1,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 10,\n    },\n    h3: {\n      display: 'block',\n      fontSize: 16,\n      textAlign: 'center',\n      marginTop: 1,\n      marginBottom: 1,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 10,\n    },\n    h4: {\n      // display: 'block',\n      fontSize: 13,\n      textAlign: 'center',\n      marginTop: 0.5,\n      marginBottom: 0.5,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 1,\n    },\n    abs: {\n      // display: 'block',\n      fontFamily: 'Times New Roman Bold',\n      fontSize: 10,\n      textAlign: 'justify',\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 1,\n    },\n    italic: {\n      // display: 'block',\n      fontFamily: 'Times New Roman Italic',\n      fontSize: 9,\n      textAlign: 'left',\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 1,\n    },\n    footer: {\n      fontSize: 8,\n      textAlign: 'left'\n    },\n    texto: {\n      display: 'block',\n      fontSize: 11,\n      flex: 0,\n      marginTop: 1,\n      marginBottom: 1,\n      marginLeft: 0,\n      marginRight: 0,\n      padding: 15,\n      // flexDirection: 'row',\n      flexWrap: 'wrap',\n      textAlign: 'justify'\n    },\n    section: {\n      margin: 25,\n      padding: 30,\n      flexGrow: 1\n    },\n    col: {\n      margin: 15,\n      padding: 10,\n      // width: '50%',\n      flexGrow: 1\n    },\n    row: {\n      margin: 20,\n      padding: 10,\n      // width: '50%',\n      flex: 1,\n      flexDirection: 'row',\n      flexGrow: 1\n    },\n    left: {\n      // width: '50%',// <- working alternative\n      flexGrow: 0,\n      flexShrink: 1,\n      flexBasis: 200,\n      },\n    right: {\n      padding: 25,\n      // width: \"50%\", // <- working alternative\n      flexShrink: 1,\n      flexGrow: 2,\n      },\n  });\n\n  // Create Document Component\n  const MyDocument = () => (\n    <Document>\n      <Page wrap size=\"A4\" style={styles.page}>\n        <Text style={styles.title}>\n          {reporte_activo}\n        </Text>\n        <Text style={styles.h4}>Universidad de San Carlos de Guatemala</Text>\n        <Text style={styles.h4}>Facultad de Ingenieria, Escuela de Ciencias y Sistemas</Text>\n        <Text style={styles.h4}>Laboratorio de Organización de Lenguajes y Compiladores 2</Text>\n        <Text style={styles.h4}>201318652 - Gonzalo Antonio García Solares</Text>\n        <View style={[styles.row, {height: 700}]}>\n          <View style={styles.left}>\n            <Text style={styles.abs}>\n              Abstract - Desde diciembre de 2019, la pandemia del virus (SARS-CoV-2)\n              y la enfermedad (COVID-19) ha estado causando estragos a nivel mundial,\n              afectando fuertemente la salud y economía.\n            </Text>\n            <Text style={styles.abs}>\n              Desde inicios de esta, se ha estado utilizando la IA para analizar su\n              comportamiento y propagación. Además, los cientificos se han apoyado de estas\n              herramientas para predecir y tratar de tomar mejores decisiones\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.h4}>\n              I.  Objetivos\n            </Text>\n            <Text style={styles.h4}>\n            </Text>\n            <Text style={styles.italic}>\n              I-A.  Generales\n            </Text>\n            <Text style={styles.h4}>\n            </Text>\n            <Text style={styles.texto}>\n              • Utilizar Scikit-Learn para el análisis de datos.\n            </Text>\n            <Text style={styles.texto}>\n              • Permitir que el usuario generar graficas y predicciones.\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.h4}>\n              II.  Marco teórico\n            </Text>\n            <Text style={styles.h4}>\n            </Text>\n            <Text style={styles.h4}>\n            </Text>\n            <Text style={styles.italic}>\n              II-A.  Regresión lineal\n            </Text>\n            <Text style={styles.h4}>\n            </Text>\n            <Text style={styles.texto}>\n              En estadística, la regresión lineal o ajuste lineal es un modelo matemático \n              usado para aproximar la relación de dependencia entre una variable dependiente \n              Y, m variables independientes Xi con m e Z y un término aleatorio epsilon.\n              Este modelo puede ser expresado como:\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.texto}>\n              Y = Bo + B1X1 + ... + BmXm + epsilon.\n            </Text>\n            <Text style={styles.title}>\n            </Text>\n            <Text style={styles.italic}>\n              II-B.  Regresión polinomial\n            </Text>\n            <Text style={styles.texto}>\n              La Regresión Polinomial es un caso especial de la Regresión Lineal, \n              extiende el modelo lineal al agregar predictores adicionales, \n              obtenidos al elevar cada uno de los predictores originales a una potencia.\n              Por ejemplo, una regresión cúbica utiliza tres variables, como predictores. \n              Este enfoque proporciona una forma sencilla de proporcionar un ajuste no lineal a los datos.\n            </Text>\n          </View>\n          <View style={styles.row}>\n            <View style={styles.left}>\n              <Text style={styles.texto}>\n                El método estándar para extender la Regresión Lineal a una relación no \n                lineal entre las variables dependientes e independientes, ha sido reemplazar \n                el modelo lineal con una función polinomial.\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.texto}>\n                Y = Bo + B1X1 + B2X^2 + B3X^3 ... + BmXm + epsilon.\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.h4}>\n                III.  Diseño experimental\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.texto}>\n                {diseno}\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.abs}>\n                • Variable independiente (X):\n              </Text>\n              <Text style={styles.texto}>\n                {ejexL}\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.abs}>\n                • Variable dependiente (Y):\n              </Text>\n              <Text style={styles.texto}>\n                {ejeyL}\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n              <Text style={styles.h4}>\n                IV.  Resultados\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.abs}>\n                • Error:\n              </Text>\n              <Text style={styles.texto}>\n                {rmse}\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.abs}>\n                • R2:\n              </Text>\n              <Text style={styles.texto}>\n                {r2}\n              </Text>\n              <Text style={styles.h4}>\n              </Text>\n              <Text style={styles.title}>\n              </Text>\n            </View>\n            <View style={styles.right}>\n            </View>\n          </View>\n        </View>\n      </Page>\n      <Page wrap size=\"A4\" style={styles.page}>\n        <View style={[styles.row, {height: 700}]}>\n        <View style={styles.left}>\n          <Text style={styles.h4}>\n          </Text>\n          <Text style={styles.abs}>\n            • Coeficientes:\n          </Text>\n          <Text style={styles.texto}>\n            {coef}\n          </Text>\n          <Text style={styles.h4}>\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.h4}>\n            V.  Conclusiones\n          </Text>\n          <Text style={styles.h4}>\n          </Text>\n          <Text style={styles.texto}>\n            {conclusion}\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.title}>\n          </Text>\n          <Text style={styles.h4}>\n          </Text>\n          <Image\n            src={img64}\n            fixed={true}\n          ></Image>\n          <Text style={styles.footer}>Figura I</Text>\n          </View>\n        </View>\n      </Page>\n    </Document>\n  );\n  // ReactPDF.renderToStream(<MyDocument />);\n  // :::::::::::::::::::::::::    Grafica   :::::::::::::::::::::::::\n  // Legendas de ejes\n  let ejexL = '';\n  let ejeyL = '';\n  if(params_grafica !== null){\n    ejexL = param_x;\n    ejeyL = param_y;\n  }else{\n    ejexL = 'Eje X';\n    ejeyL = 'Eje Y';\n  }\n  const grafiquinha = {\n    data: (canvas) => {\n      let ctx = canvas.getContext(\"2d\");\n      let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n  \n      gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n      gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n      gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n  \n      return {\n        // labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n        labels: eje_x,\n        datasets: [\n          {\n            label: ejeyL,\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#00d6b4\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#00d6b4\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#00d6b4\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            // data: [90, 27, 60, 12, 80],\n            data: data_arr,\n          },\n        ],\n      };\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n  \n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\",\n      },\n      responsive: true,\n      scales: {\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: ejeyL\n            },\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.0)\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              suggestedMin: 50,\n              suggestedMax: 125,\n              padding: 20,\n              fontColor: \"#9e9e9e\",\n            },\n          },\n        ],\n  \n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: ejexL\n            },\n            barPercentage: 1.6,\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(0,242,195,0.1)\",\n              zeroLineColor: \"transparent\",\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\",\n            },\n          },\n        ],\n      },\n    },\n  };\n  \n  // var image = grafiquinha.data.toDataURL(\"image/png\");\n  // console.log(image)\n  return (\n    <>\n      <div className=\"content\">\n        <div>{reporte_activo !== null ? \n          <h1>{reporte_activo}</h1>\n          :\n          <h1>Reporte activo</h1>\n        }</div>\n        <Row>\n          <Col lg=\"5\" md='20'>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Resultado</h5>\n                  {\n                    params_grafica !== null ?\n                    <CardTitle tag=\"h3\">\n                      <i className=\"tim-icons icon-bell-55 text-info\" /> \n                      {param_filtro}\n                    </CardTitle>\n                    :\n                    <CardTitle tag=\"h3\">\n                      <i className=\"tim-icons icon-bell-55 text-info\" /> \n                      Gráfica\n                    </CardTitle>\n                  }\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={grafiquinha.data}\n                    options={grafiquinha.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Predicción</CardTitle>\n              </CardHeader>\n              <CardBody>\n              <div>{res_pred !== null ? \n                <h1>{prediccao}</h1>\n                :\n                <h1>Resultado prediccion</h1>\n              }</div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h1 className=\"card-category\">Reporte</h1>\n                <CardTitle tag=\"h3\">\n                <PDFViewer\n                  height='700'\n                  width='750'\n                >\n                  <MyDocument \n                  />\n                </PDFViewer>\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                {/* PDF */}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        {/* <Row>\n          \n        </Row> */}\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/variables/charts.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Inicio.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Carga.js",["89","90","91","92","93","94"],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Param.js",["95","96","97","98","99","100","101","102","103","104"],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/DataController.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":46,"column":3,"nodeType":"111","messageId":"112","endLine":46,"endColumn":11},{"ruleId":"109","severity":1,"message":"113","line":54,"column":10,"nodeType":"111","messageId":"112","endLine":54,"endColumn":20},{"ruleId":"109","severity":1,"message":"114","line":54,"column":22,"nodeType":"111","messageId":"112","endLine":54,"endColumn":35},{"ruleId":"109","severity":1,"message":"115","line":84,"column":9,"nodeType":"111","messageId":"112","endLine":84,"endColumn":16},{"ruleId":"109","severity":1,"message":"116","line":110,"column":3,"nodeType":"111","messageId":"112","endLine":110,"endColumn":12},{"ruleId":"109","severity":1,"message":"117","line":113,"column":3,"nodeType":"111","messageId":"112","endLine":113,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":151,"column":27,"nodeType":"120","messageId":"121","endLine":151,"endColumn":29},{"ruleId":"109","severity":1,"message":"122","line":25,"column":8,"nodeType":"111","messageId":"112","endLine":25,"endColumn":10},{"ruleId":"109","severity":1,"message":"123","line":45,"column":10,"nodeType":"111","messageId":"112","endLine":45,"endColumn":21},{"ruleId":"109","severity":1,"message":"124","line":46,"column":10,"nodeType":"111","messageId":"112","endLine":46,"endColumn":23},{"ruleId":"109","severity":1,"message":"125","line":48,"column":10,"nodeType":"111","messageId":"112","endLine":48,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":77,"column":12,"nodeType":"120","messageId":"121","endLine":77,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":114,"column":17,"nodeType":"120","messageId":"121","endLine":114,"endColumn":19},{"ruleId":"109","severity":1,"message":"126","line":38,"column":3,"nodeType":"111","messageId":"112","endLine":38,"endColumn":17},{"ruleId":"109","severity":1,"message":"125","line":44,"column":10,"nodeType":"111","messageId":"112","endLine":44,"endColumn":16},{"ruleId":"109","severity":1,"message":"127","line":44,"column":18,"nodeType":"111","messageId":"112","endLine":44,"endColumn":27},{"ruleId":"109","severity":1,"message":"128","line":55,"column":10,"nodeType":"111","messageId":"112","endLine":55,"endColumn":17},{"ruleId":"109","severity":1,"message":"129","line":55,"column":19,"nodeType":"111","messageId":"112","endLine":55,"endColumn":29},{"ruleId":"109","severity":1,"message":"130","line":59,"column":10,"nodeType":"111","messageId":"112","endLine":59,"endColumn":20},{"ruleId":"109","severity":1,"message":"131","line":59,"column":22,"nodeType":"111","messageId":"112","endLine":59,"endColumn":36},{"ruleId":"109","severity":1,"message":"132","line":65,"column":7,"nodeType":"111","messageId":"112","endLine":65,"endColumn":14},{"ruleId":"109","severity":1,"message":"133","line":610,"column":9,"nodeType":"111","messageId":"112","endLine":610,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":661,"column":12,"nodeType":"120","messageId":"121","endLine":661,"endColumn":14},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'ReactPDF' is defined but never used.","Identifier","unusedVar","'prediccion' is assigned a value but never used.","'setPrediccion' is assigned a value but never used.","'headers' is assigned a value but never used.","'param_col' is assigned a value but never used.","'param_pred' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fs' is defined but never used.","'tipoArchivo' is assigned a value but never used.","'nombreArchivo' is assigned a value but never used.","'csvArr' is assigned a value but never used.","'InputGroupText' is defined but never used.","'setCSVArr' is assigned a value but never used.","'genero2' is assigned a value but never used.","'setGenero2' is assigned a value but never used.","'res_params' is assigned a value but never used.","'set_res_params' is assigned a value but never used.","'col_arr' is defined but never used.","'checkValor3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]