[{"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/index.js":"1","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/ThemeWrapper/ThemeWrapper.js":"2","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js":"3","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/RTL/RTL.js":"4","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/Admin/Admin.js":"5","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/ThemeContext.js":"6","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/BackgroundColorContext.js":"7","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/routes.js":"8","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Footer/Footer.js":"9","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Sidebar/Sidebar.js":"10","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/AdminNavbar.js":"11","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/RTLNavbar.js":"12","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/FixedPlugin/FixedPlugin.js":"13","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Dashboard.js":"14","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/variables/charts.js":"15","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Inicio.js":"16","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Carga.js":"17","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Param.js":"18","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/DataController.js":"19"},{"size":1814,"mtime":1641269609489,"results":"20","hashOfConfig":"21"},{"size":695,"mtime":1640677778609,"results":"22","hashOfConfig":"21"},{"size":495,"mtime":1640677778606,"results":"23","hashOfConfig":"21"},{"size":5573,"mtime":1640677778621,"results":"24","hashOfConfig":"21"},{"size":4716,"mtime":1640817091295,"results":"25","hashOfConfig":"21"},{"size":201,"mtime":1640677778610,"results":"26","hashOfConfig":"21"},{"size":254,"mtime":1640677778609,"results":"27","hashOfConfig":"21"},{"size":1515,"mtime":1640817415790,"results":"28","hashOfConfig":"21"},{"size":1776,"mtime":1640818371387,"results":"29","hashOfConfig":"21"},{"size":5511,"mtime":1640729670722,"results":"30","hashOfConfig":"21"},{"size":7152,"mtime":1640816845975,"results":"31","hashOfConfig":"21"},{"size":7000,"mtime":1640677778608,"results":"32","hashOfConfig":"21"},{"size":4226,"mtime":1640677778607,"results":"33","hashOfConfig":"21"},{"size":21588,"mtime":1641283033603,"results":"34","hashOfConfig":"21"},{"size":3188,"mtime":1641092183157,"results":"35","hashOfConfig":"21"},{"size":4249,"mtime":1641248502547,"results":"36","hashOfConfig":"21"},{"size":11282,"mtime":1641273340323,"results":"37","hashOfConfig":"21"},{"size":153661,"mtime":1641300947349,"results":"38","hashOfConfig":"21"},{"size":616,"mtime":1641269676487,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1k0x18m",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/index.js",[],["80","81"],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/ThemeWrapper/ThemeWrapper.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/RTL/RTL.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/layouts/Admin/Admin.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/ThemeContext.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/BackgroundColorContext.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/routes.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Footer/Footer.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Sidebar/Sidebar.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/AdminNavbar.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/Navbars/RTLNavbar.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/components/FixedPlugin/FixedPlugin.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Dashboard.js",["82","83","84","85","86","87","88"],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/variables/charts.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Inicio.js",[],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Carga.js",["89","90","91","92","93","94"],"/*!\n\n=========================================================\n* Black Dashboard React v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport {React, useState, useContext } from \"react\";\nimport {Button} from 'reactstrap';\nimport * as CSV from 'csv-string';\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\nimport Papa from 'papaparse';\nimport XLSX from 'xlsx';\nimport fs from 'fs';\nimport { Parser } from 'json2csv'\nimport { DataContext } from \"contexts/DataController\";\n// import Proptypes from 'prop-types';\n// import { CSVLink } from 'react-csv';\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  // Table,\n  // FormGroup,\n  Row,\n  Col,\n  Input,\n} from \"reactstrap\";\n\nfunction Tables() {\n  const [archivo, setArchivo] = useState();\n  const [tipoArchivo, setTipoArchivo] = useState();\n  const [nombreArchivo, setNombreArchivo] = useState();\n  const [head, setHead] = useState([]);\n  const [csvArr, setCSVArr] = useContext(DataContext);\n  const [datos, setDatos] = useState()\n  \n  const getFileNameWithExt = (event) => {\n    const name = event.name;\n    const lastDot = name.lastIndexOf('.');\n  \n    const fileName = name.substring(0, lastDot);\n    const ext = name.substring(lastDot + 1);\n    console.log(\"ext: \", ext);\n    setTipoArchivo(ext);\n    setNombreArchivo(fileName);\n    return ext;\n  }\n\n  const inputHandler = (e) => {\n    // if(e.size > 22000000){\n    //   // alert(\"File is too big!\");\n    //   Swal.fire({\n    //     icon: 'error',\n    //     title: 'Oops...',\n    //     text: 'Â¡El archivo es demasiado grande!'\n    //   });\n    //   // this.value = \"\";\n    //   return;\n    // };\n    console.log(e);\n    const ext = getFileNameWithExt(e);\n    //  :::::::::::::::::  EXCEL  :::::::::::::::::\n    if(ext == 'xlsx'){\n      console.log(\"Tipo XLSX\");\n      // ========  API REQ  ========\n      e.arrayBuffer().then((res) => {\n        // Obteniendo datos\n        let data = new Uint8Array(res);\n        let workbook = XLSX.read(data, {type: \"array\"});\n        let first_sheet_name = workbook.SheetNames[0];\n        // console.log(\"sheet Name\", first_sheet_name);\n        let worksheet = workbook.Sheets[first_sheet_name]\n        // Obteniendo el nombre del archivo\n        let name = e.name\n        const lastDot = name.lastIndexOf('.');\n        const fileName = name.substring(0, lastDot);\n        let nombre_arch = fileName + \".csv\";\n        // let jsonData = XLSX.utils.sheet_to_json(worksheet, {raw: true});\n        // // console.log(\"JSON\", jsondata);\n        // let json = jsonData.map((x) =>({\n        //   ...x,\n        //   ColumnName:\"Value2\"\n        // }))\n\n        // let new_worksheet = XLSX.utils.json_to_sheet(json);\n        // let new_workbook = XLSX.utils.book_new();\n        // // console.log(new_workbook);\n        // XLSX.utils.book_append_sheet(new_workbook, new_worksheet, \"CSV_Sheet\");\n        \n        // XLSX.writeFile(new_workbook, nombre_arch);\n        // Creando contenido en csv\n        let csv_xlsx = XLSX.utils.sheet_to_csv(worksheet);\n        // Objeto file con el contenido y tipo csv\n        let new_csv_file = new File([csv_xlsx], nombre_arch, {type: \"text/csv\", lastModified: ''})\n        // console.log(new_csv_file);\n        setArchivo(new_csv_file)\n      })\n      // ========   end API REQ   ========\n    }//  :::::::::::::::::  JSON  :::::::::::::::::\n    else if(ext == 'json'){\n      console.log(\"Tipo JSON\");\n      // let fields = ['field1', 'field2', 'field3'];\n      let fields = [];\n      // Obteniendo el nombre del archivo\n      let name = e.name\n      const lastDot = name.lastIndexOf('.');\n      const fileName = name.substring(0, lastDot);\n      let nombre_arch = fileName + \".csv\";\n      var reader = new FileReader();\n      reader.readAsText(e, \"UTF-8\");\n      reader.onload = function (e) {\n        let data = e.target.result;\n        let parsed_data = JSON.parse(data);\n        for (const item in parsed_data[0]) {\n          fields.push(item)\n        }\n        // console.log(parsed_data);\n        // console.log(fields);\n        const opts = { fields };\n\n        try {\n          const parser = new Parser(opts);\n          // Creando contenido en csv\n          const csv = parser.parse(parsed_data);\n          console.log(csv);\n          // Objeto file con el contenido y tipo csv\n          let new_csv_file = new File([csv], nombre_arch, {type: \"text/csv\", lastModified: ''})\n          console.log(new_csv_file);\n          setArchivo(new_csv_file)\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }//  :::::::::::::::::  CSV  :::::::::::::::::\n    else{\n      console.log(\"Tipo CSV\");\n      setArchivo(e)\n    }\n  }\n  // ::::::::::   Procesar CSV  ::::::::::\n    // const processCSV = (str, delim) => {\n    //   const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n    //   // console.log(headers)\n    //   const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n    //   const newArray = rows.map( (row, i) => {\n    //       const values = row.split(delim);\n    //       const obj = Object.assign({}, ...Object.entries({...headers}).map(([e, a]) => values[e]?({[JSON.parse(a)]: values[e]}):null));\n    //       // console.log(\"obj\");\n    //       // console.log(obj);\n    //       return obj;\n    //       // return {Date: values[0], Days: values[1], Cases: values[2], Deaths: values[3]};\n    //   })\n    //   setHead(...[headers]);\n    //   setCsvArray([...newArray]);\n    //   // makeRequest();\n    // }\n    // ::::::::::   B64  ::::::::::\n  \n  // ::::::::::   SUBMIT  ::::::::::\n  const submit = () => {\n    const file = archivo;\n\n    const reader = new FileReader();\n    // Parseando csv a array\n    Papa.parse(archivo, {\n      complete: function(results){\n        // console.log(results.data);\n        let data = results.data;\n        // data = data.replace(/^\\s*(\\r)/gm, \"\");\n        let temp = [];\n        // Removiendo valores vacios\n        for(let i of data)\n          i && temp.push(i)\n        data = temp;\n        // Array con contenido\n        // console.log(data);\n        // localStorage.clear();\n        // localStorage.setItem(\"csv_arr\", JSON.stringify(data));\n        setCSVArr(data);\n        // ========  axios  ========\n        axios({\n          method: \"post\",\n          url: 'http://0.0.0.0:5000/get_file',\n          data: JSON.stringify(data),\n        })\n        .then(function (response) {\n          //handle success\n          Swal.fire(\n            'Â¡Muy bien!',\n            'Se ha cargado el archivo correctamente.',\n            'success'\n          )\n          console.log(response);\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Ocurrio un error al realizar la peticion: ' + response\n          });\n        })\n        // ========   end axios   ========\n      }\n    });\n\n    reader.onload = function(e) {\n        let text = e.target.result.replace(/^\\s*(\\r)/gm, \"\");\n        const delim = CSV.detect(text);\n        console.log(\"delim:\");\n        console.log(delim);\n        text = text.replace(/^\\s*(\\r)/gm, \"\");\n        setDatos(text);\n        let headers = text.slice(0,text.indexOf('\\n'))\n        headers = headers.replace(/^\\s*(\\r)/gm, \"\");\n        // headers = headers.replace(/^(\\r)/gm, \"\");\n        let headers_arr = headers.split(delim);\n        for (let i = 0; i < headers_arr.length; i++) {\n          headers_arr[i] = headers_arr[i].replace(/\\r/g, \"\");\n        }\n        console.log(headers_arr);\n        setHead(headers_arr);\n        // processCSV(text, delim);\n    }\n\n    reader.readAsText(file);\n    // setContent(file);\n  }\n  \n  // console.log(\"csvArray\")\n  // console.log(csvArray)\n  console.log(\"headers\")\n  console.log(head)\n  localStorage.setItem(\"headers\", JSON.stringify(head));\n  return (\n    <>\n      {/* Muestra del archivo */}\n      <div className=\"content\">\n        {/* Carga del archivo */}\n        <form id='csv-form'>\n            <Input\n                type='file'\n                accept='.csv, .xlsx, .json'\n                id='archivo'\n                onChange={(e) => {\n                  getFileNameWithExt(e.target.files[0])\n                  inputHandler(e.target.files[0])\n                }}\n            >\n            </Input>\n            <br/>\n            <Button\n                color=\"primary\"\n                className=\"animation-on-hover\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  if(archivo)submit()\n              }}>\n                Cargar\n            </Button>\n        <br/>\n        <br/>\n        </form>\n        <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">PrevisualizaciÃ³n de datos</CardTitle>\n              </CardHeader>\n              <CardBody>\n                {/* <Row>\n                  <Col md=\"8\">\n                    <FormGroup> */}\n                      <Input\n                        height=\"auto\"\n                        width=\"auto\"\n                        cols=\"150\"\n                        defaultValue={datos}\n                        placeholder=\"Contenido del archivo a analizar\"\n                        rows=\"500\"\n                        type=\"textarea\"\n                      />\n                    {/* </FormGroup>\n                  </Col>\n                </Row> */}\n                {/* <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      {\n                        head.map((item, i) => { \n                          if(item != null)\n                            return(\n                              <th> {JSON.parse(item)} </th>\n                            )\n                          return null\n                        })\n                      }\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {\n                    csvArray.map((item, i) => { \n                      if(item != null)\n                        return(\n                        <tr key={i}>\n                          {\n                            Object.entries(item).map(([key, value], ii) => { \n                              if(value != null)\n                                return(\n                                  <td> {value} </td>\n                                )\n                              return null\n                            })\n                          }\n                        </tr>\n                        )\n                      return null\n                    })\n                  }\n                  </tbody>\n                </Table> */}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Tables;\n","/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/views/Param.js",["95","96","97","98","99","100","101","102"],"/home/g/Documents/GitHub/OLC2-P2-VD21/frontend/src/contexts/DataController.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":46,"column":3,"nodeType":"109","messageId":"110","endLine":46,"endColumn":11},{"ruleId":"107","severity":1,"message":"111","line":54,"column":10,"nodeType":"109","messageId":"110","endLine":54,"endColumn":20},{"ruleId":"107","severity":1,"message":"112","line":54,"column":22,"nodeType":"109","messageId":"110","endLine":54,"endColumn":35},{"ruleId":"107","severity":1,"message":"113","line":84,"column":9,"nodeType":"109","messageId":"110","endLine":84,"endColumn":16},{"ruleId":"107","severity":1,"message":"114","line":110,"column":3,"nodeType":"109","messageId":"110","endLine":110,"endColumn":12},{"ruleId":"107","severity":1,"message":"115","line":113,"column":3,"nodeType":"109","messageId":"110","endLine":113,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":151,"column":27,"nodeType":"118","messageId":"119","endLine":151,"endColumn":29},{"ruleId":"107","severity":1,"message":"120","line":25,"column":8,"nodeType":"109","messageId":"110","endLine":25,"endColumn":10},{"ruleId":"107","severity":1,"message":"121","line":45,"column":10,"nodeType":"109","messageId":"110","endLine":45,"endColumn":21},{"ruleId":"107","severity":1,"message":"122","line":46,"column":10,"nodeType":"109","messageId":"110","endLine":46,"endColumn":23},{"ruleId":"107","severity":1,"message":"123","line":48,"column":10,"nodeType":"109","messageId":"110","endLine":48,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":77,"column":12,"nodeType":"118","messageId":"119","endLine":77,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":114,"column":17,"nodeType":"118","messageId":"119","endLine":114,"endColumn":19},{"ruleId":"107","severity":1,"message":"124","line":38,"column":3,"nodeType":"109","messageId":"110","endLine":38,"endColumn":17},{"ruleId":"107","severity":1,"message":"125","line":43,"column":18,"nodeType":"109","messageId":"110","endLine":43,"endColumn":27},{"ruleId":"107","severity":1,"message":"126","line":53,"column":10,"nodeType":"109","messageId":"110","endLine":53,"endColumn":20},{"ruleId":"107","severity":1,"message":"127","line":53,"column":22,"nodeType":"109","messageId":"110","endLine":53,"endColumn":36},{"ruleId":"107","severity":1,"message":"128","line":59,"column":7,"nodeType":"109","messageId":"110","endLine":59,"endColumn":14},{"ruleId":"107","severity":1,"message":"129","line":522,"column":9,"nodeType":"109","messageId":"110","endLine":522,"endColumn":20},{"ruleId":"107","severity":1,"message":"130","line":534,"column":9,"nodeType":"109","messageId":"110","endLine":534,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":585,"column":12,"nodeType":"118","messageId":"119","endLine":585,"endColumn":14},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'ReactPDF' is defined but never used.","Identifier","unusedVar","'prediccion' is assigned a value but never used.","'setPrediccion' is assigned a value but never used.","'headers' is assigned a value but never used.","'param_col' is assigned a value but never used.","'param_pred' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fs' is defined but never used.","'tipoArchivo' is assigned a value but never used.","'nombreArchivo' is assigned a value but never used.","'csvArr' is assigned a value but never used.","'InputGroupText' is defined but never used.","'setCSVArr' is assigned a value but never used.","'res_params' is assigned a value but never used.","'set_res_params' is assigned a value but never used.","'col_arr' is defined but never used.","'checkValor2' is assigned a value but never used.","'checkValor3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]